listen_addresses = 'localhost,LSTN_HOSTNAME'              # what IP address(es) to listen on;
                                        # comma-separated list of addresses;
                                        # defaults to 'localhost'; use '*' for all
                                        # (change requires restart)
port = PORT_ECOUTE                      # (change requires restart)


track_io_timing = on

shared_preload_libraries='pg_stat_statements,powa,pg_stat_kcache,pg_qualstats'

# Ensure WAL files contain enough information to enable read-only queries
# on the standby

#wal_level = 'hot_standby'

# Enable up to 10 replication connections

#max_wal_senders = 10

# How much WAL to retain on the master to allow a temporarily
# disconnected standby to catch up again. The larger this is, the
# longer the standby can be disconnected. This is needed only in
# 9.3; from 9.4, replication slots can be used instead (see below).

#wal_keep_segments = 5000
wal_log_hints = on                      # also do full page writes of non-critical updates
                                        # (change requires restart)
#checkpoint_completion_target = 0.5     # checkpoint target duration, 0.0 - 1.0
#checkpoint_completion_target = 0.9
#checkpoint_warning = 30s               # 0 disables
                                        # (change requires restart)



# Enable read-only queries on a standby
# (Note: this will be ignored on a master but we recommend including
# it anyway)
# - Archiving -

#hot_standby = on
#archive_mode = on              # enables archiving; off, on, or always
                                # (change requires restart)
#archive_command = '/usr/bin/rsync -i %p postgres@pegnitz.mpw.fra:/custom/data/pgsql/archive/NOM_INSTANCE/pg_arch_wal/%f'             
                                # command to use to archive a logfile segment
                                # placeholders: %p = path of file to archive
                                #               %f = file name only
                                # e.g. 'test ! -f /mnt/server/archivedir/%f && cp %p /mnt/server/archivedir/%f'

#------------------------------------------------------------------------------
# ERROR REPORTING AND LOGGING
#------------------------------------------------------------------------------

# - Where to Log -

#log_destination = 'stderr'             # Valid values are combinations of
                                        # stderr, csvlog, syslog, and eventlog,
                                        # depending on platform.  csvlog
                                        # requires logging_collector to be on.
log_destination = 'stderr,syslog'

# This is used when logging to stderr:
logging_collector = on                  # Enable capturing of stderr and csvlog
                                        # into log files. Required to be on for
                                        # csvlogs.
                                        # (change requires restart)

# These are only used if logging_collector is on:
#log_directory = 'pg_log'               # directory where log files are written,
                                        # can be absolute or relative to PGDATA
log_directory = '/custom/log/pgsql/9.6/NOM_INSTANCE'
#log_filename = 'postgresql-%a.log'     # log file name pattern,
                                        # can include strftime() escapes
log_filename = 'postgresql.log'
#log_file_mode = 0600                   # creation mode for log files,
                                        # begin with 0 to use octal notation
log_truncate_on_rotation = on           # If on, an existing log file with the
                                        # same name as the new log file will be
                                        # truncated rather than appended to.
                                        # But such truncation only occurs on
                                        # time-driven rotation, not on restarts
                                        # or size-driven rotation.  Default is
                                        # off, meaning append to existing files
                                        # in all cases.
log_rotation_age = 1d                   # Automatic rotation of logfiles will
                                        # happen after that time.  0 disables.
log_rotation_size = 0                   # Automatic rotation of logfiles will
                                        # happen after that much log output.
                                        # 0 disables.
# These are relevant when logging to syslog:
syslog_facility = 'LOCAL0'
syslog_ident = 'postgres-NOM_INSTANCE'
